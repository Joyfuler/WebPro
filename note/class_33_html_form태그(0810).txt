일반적으로 웹화면 로그인 등에서 사용자에게 아이디/패스워드를 입력받고,
해당 값이 데이터베이스에 있는지를 대조하는 작업을 거침. (select * from member where id= and ps= )...
아이디와 패스워드, 로그인 버튼은 <form> 태그로 둘러싸여 있으며, 'form 태그 안에 있는 값'만 받아 db로 전달됨.
받는 값은 name으로 받아야 해당 주소로 갔을 때(form action=주소) 해당 패러미터가 들어가게 됨.
값은 기본적으로 input을 이용하며, 입력받을 데이터의 type를 지정 가능. <input type=text, button, number, email, url 등)
혹은 드롭박스 형태로 하나를 골라서 데이터를 입력받을 수도 있음.
<select ( multiple="multiple") name = "nation"> <option>한국</option></select> ...
모든 값을 제출하려면 <input type="submit" value="제출> , 초기화는 <input type="reset" value=초기화>

* 유효성검사
database에 들어갈 타입에 맞도록 웹화면에서 입력할 수 있는 값에 제약을 줌.
form action에 name을 주고, submit시 chk() 함수를 통해 조건에 걸리는 경우 경고출력+ false 리턴하여 제출 못하도록 함.
혹은 태그에서 required="required"를 사용하여 해당 값을 무조건 입력하도록 할 수도 있음. (자세한 글자 제약 등은 자바스크립트 필요)
우선순위는 태그 > 자바스크립트.

* 정규표현식 (빅데이터,AI등에서 주로사용...)
비밀번호를 설정할 때 ~글자 이상, 영어,특수문자,숫자를 포함하는 법칙이 있는 경우.
ex) 이메일인 경우 
아이디: 숫자나 영어 모두 올 수 있음 a-zA-Z0-9 or \w+ (숫자나 영어가 1글자이상)
@와 .이 꼭 포함되어야 함. 정규식에서 .은 모든 문자를 의미하므로, \. 을 사용해 (.) 을 포함되도록 할 수 있음.
--> \w+@[0-9a-zA-z]+\.\w+
co.kr의 경우는
--> \w+@[0-9a-zA-Z]+ (\.\w+){1,2}
.이후 아무 문자나 오는 것이 1~2번 포함되도록.


--- div
일반적으로 header(로고or이름), 메뉴(nav, 보통 수평), contents(section), 최하단 회사정보(footer) 등 각 부분이 나누어져 있음.