sql 쿼리 하나당 들어가는 코드의 양이 매우 많으므로, 이를 최적화하기 위해 dtodao를 사용.

(1) dto 
데이터베이스의 각 타이틀을 변수로 생성 (private int name...)
*클래스를 따로 나누던 것과 원리는 비슷함
1) 변수 생성 
2) 각 변수의 생성자 만들고, sql조건에 맞는 값만큼 매개변수 설정.
3) tostring과 getset을 만들면 dto 완성.

(2) dao
메인에서 메소드를 호출하는 용도. 
oracle 접속하는 과정을 dao의 각 메소드에 넣고, sql쿼리를 쏴서 그 값을 ArrayList로 추가한 뒤, 
그 값을 메인에 return하도록 함. 
배열 만들때는 배열.add 후 해당 배열의 타입에 맞춰주자.
ex) dtos.add(new PersonDto(매,개,변,수));
foreach에 배열을 넣은 뒤 출력하는 용도로도 사용 가능.

* 일반적으로 싱글톤 함수로 만들어 외부에서 직접 객체를 생성(new) 할 수 없도록 하고, 
대신 값을 해당 메소드의 타입을 INSTANCE로 만든 후  '타입명.getinstance'하도록 함.
(클래스와 동일한 이름의 메소드를 만든 후 private로 만듬.

(sql이 있는 만큼 오타 위험이 높고 또한 중요한 클래스이니 신경쓰자)



-------------- 프로그램 짤 때 고려할 것 ----------------
1) 요구사항을 확립한 후 exerd로 db설계
2) exerd를 토대로 테이블생성 (시퀀스포함), 더미데이터입력
3) 프로그램에서 쓸 query 작성
4) dto 만들기 (프로그램에 사용할 매개변수, 생성자, getset 마련)
5) dao 구현 (메소드별로 sql을 짜고 배열출력 + test 진행)
6) 비즈니스 로직(고객의 꼭 필요한 요구사항) 구현