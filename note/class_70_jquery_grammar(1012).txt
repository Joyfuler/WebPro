hide() < - > show()
혹은 toggle() 을 통해 클릭시 hide와 show를 번갈아가며 사용이 가능함.

-- 선택자를 기본 css와 마찬가지로 jquery에서도 사용 가능
ex) div#toggle / p[class='goShow']
class가 지정되어 있다면 .toggle 등으로 태그를 명기하지 않아도 무방함.

$(선택자).click(function(){}); 을 사용할 수도 있고,
on(이벤트명,함수) 를 통해서도 동일한 기능을 수행한다.

$('.goShow).on('click',function(){
$('div#toggle').show();
});

--

val() : html() 이나 text()에 자주 사용하는 함수로,
input의 value값을 수정하거나 가져올 수 있음.
html을 포함해 입력한 값을 .text()로 출력하면 태그가 생략됨.
$('p#msg').html('<b>Hello, jquery</b>');
var pMsg = $('p#msg').html();  --> <b>Hello, jquery</b>
var pMsgtext = $('p#msg').text();  --> Hello, jquery</b>

-- 선택자

even과 odd
기존 css와 마찬가지로 :nth-child(2n)과 (2n+1)로 구분이 가능하나 even과 odd를 쓸 수도 있다.
$('tr:nth-child(2n)').css('color','red');
$('tr:even').css('background-color', '#cccccc');
$('tr:odd').css('background-color', '#FFFFFF');

eq (0) ~번째를 의미하는 선택자. 가장 많이 사용됨.
$('tr:eq(0)') -> 첫번째 tr이 적용됨. 

first() 첫번째, last() 마지막.
$('tr.first()).css('backgroundColor','black').css('color','white');

-- 게시판의 해당 줄의 어느 곳을 클릭하더라도 특정 td에 있는 a가 발동하게 하는 법
$('tr').click(function(){  //tr 을 클릭시 이벤트 발생
	var no = $(this).children().eq(0).text().trim() // 변수 생성 = tr의 자식(td)의 첫번째 (글번호가 있는곳)의 텍스트를 가져옴 == 글번호
	if (!isNaN(Number(no))){ // 글번호가 있는 곳이지만 첫줄의 경우 '글번호' 문자가 있으므로 이를 제외
	location.href = "주소?bid="+no; 
};  와 같은 형식으로 해당 tr의 어디를 클릭해도 이동하도록 변경이 가능.


-- each () 배열 출력법.

기존 javascript의 forEach() 함수로 배열을 출력하는 방법  :
1) const list = [ { 각배열이름 : '' , 속성 : '' } ,
... ]; 으로 배열의 객체를 생성.

2) list.forEach(function(item, idx){
document.body.innerHTML += '<h2><a href =+"item.속성+'">item.이름</a></h2>
item.name / item.link / idx 등으로 출력한다.

jquery에서 each()로 배열을 출력하는 방법.
(위 객체배열을 그대로 사용)
$(list).each(function(idx,item){  // 기존과 다르게 idx가 먼저, item이 나중으로 나옴!
$('body').html($(body).html() + '<h2><a href ="'+item.link + '">' + idx + '. ' + item.name + '</a></h2>');
);
});

기존의 body에 html을 추가하겠다면 $('body').html() 안에 다시 $('body'.html() + '<hr>' 등을 넣는다.
단, 매우 가독성이 떨어지므로 append() 함수를 사용 추천.



-- addClass(): 해당 태그에 클래스를 추가  + removeClass(): 해당 태그에 클래스를 제거
$(document).ready(function(){
 $('td').each(function(idx,item){ // each를 통해 특정 td를 클릭할 떄마다 이벤트 발생
   $(this).click(function(){
   $('td').removeClass('tdRed'); // 모든 td의 'tdRed' 클래스를 우선 삭제한 후
   $(this).addClass('tdRed'); // 클릭한 곳의 class만 tdred로 설정.
});
});
위의 경우 스크립트의 가독성은 떨어지지만 html태그는 간단해짐.

-- attr('속성명','속성값') 을 가져와 처리도 가능.
<td id = "0" 등을 매 값에 넣어주고 그 id를 가져오면 된다.
$('td').click(function(){
let idx = $(this).attr('id');  클릭한 td의 id 속성값이 idx에 저장된다. 
$(this).attr('id', Number(idx)+1); 저장된 idx이 클릭할 때마다 +1씩 된다.
});

위의 경우는 스크립트가 간단해지지만 html 태그가 좀 더 지저분해진다.

-- jquery의 이벤트는 클릭 외에도 다양하게 존재.
마우스를 올렸을 때 / 내렸을 때/ 클릭한 후 클릭이 올라올 때 / 더블클릭시 등.

$('img').mousedown(function(){
	$(this).attr('src','img/but2.gif); // 해당그림을 클릭할 시 but2.gif로 src로 바꿈.
});


-- 이벤트를 제거 (off(); / 강제발생 /trigger();
클릭 5회까지 하트를 추가, 6회부터 하트를 제거. (prepend는 태그 앞 / append는 태그 뒤 )
$('h1#h1').on('click',function(){
var clickCnt = 0;
if (clickCnt <5 ){
$(this.append(하트));
clickCnt++;
} else {
$(this).off();
});

1회만 이벤트 시행 후 더이상 이벤트를 발생하지 않게 하려면
이벤트 밑에 $(this).off(); 를 사용하거나,
on 대신 one을 입력한다.
$('h2').one('click',function(){
.... });
** $('td') 의 경우 해당 태그를 가진 (td) 선택자가 모두 배열로 들어온다는 점을 참고할 것.


-- ★ jqueryUi
제이쿼리를 cdn으로 붙여넣으면 사용할 수 있는 기능들.
jqueryui.com/에서 demos 메뉴에 들어가 view source에서 확인 가능.
input type = "date"의 경우 크롬에서는 정상적으로 출력되나 다른 브라우저나 버전에선 출력되지 않을 수 있음.
이를 위해 jquery에서 제공하는 ui를 사용하여 달력을 표시하도록 할 수 있음.
달력의 형식이 마음에 들지 않는다면 api를 확인하여 변경이 가능하다. 
각 기능이 제공하는 api를 확인하여 덮어쓰기로 편집을 진행할 것.
ex) dateFormat: "yy-mm-dd",
    monthNames: ["1월", 2월", ... ],
    yearSuffix: '년',
    changeMonth: true,
    changeYear: true,
** 사용할 때 jqueryui 자동완성을 tern project에서 확인하자

이외에 getbootstrap.com / bootswatch.com에서도 끌어와 쓸 수 있음.