지금까지의 효율성을 올리는 방법
1. 인터페이스 대응하는 변수를 만든다. (모든 클래스 공통)
2. 각 클래스의 생성자에서 부품을 끼워맞춰준다. (이 부분만 차이가 발생함)
3. set를 통해 3가지를 다시 정의해준다. (모든 클래스 공통)
4. 출력시켜준다. (모든 클래스 공통)

* 생성자의 부품을 끼워맞추는 과정을 제외하면 나머지는 모두 동일한 과정을 반복함. 이 부분을 패턴을 이용해 더 간단하게 만들 수 있음.
상위 클래스에 공통되는 내용을 모두 통합시키면 됨. (변수 추가, setter 추가)
이후 추상 클래스를 구현해주면 완성. (기존에 있던 추상 클래스에 역할을 집어넣어 상속만 해 해결할 수 있도록.
단, 추상 클래스는 abstract로 설정되어 있을 수 있으니 주의.. 상속시 타입을 일치시켜 새로운 요소를 추가하거나 삭제하기 용이하게 할 것.

결론 - 부모클래스에서 공통된 변수를 미리 설정할 것. 공유되는 메소드 역시 추상 메소드를 구현하고, 각 부품만 바꿔서 실행할 수 있도록 조정.
만일 파츠를 추가하고 싶다면, 기존 소스를 건드는 것이 아니라 새로운 부품(인터페이스) 을 작성하자.